---
# tasks file for apache

# Install Apache
- name: Ensure Apache is installed
  apt:
    name: "{{ item }}"
    state: latest
  with_items: "{{ apache_packages | list }}"

# Configure Apache
- name: Add servername to Apache config
  lineinfile:
    path: /etc/apache2/apache2.conf
    regexp: '^(.*)ServerName(.*)$'
    line: "ServerName {{ ansible_hostname }}"
    owner: root
    group: root
    mode: 0644
  notify: restart apache

- name: Edit apache directory config
  lineinfile:
    path: /etc/apache2/mods-available/dir.conf
    regexp: '^(.*)DirectoryIndex(.*)$'
    line: DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
    state: present
  notify: restart apache

- name: Configure Apache user and group
  lineinfile:
    dest: /etc/apache2/envvars
    regexp: "^export {{ item.param }}="
    line: "export {{ item.param }}={{ item.value }}"
  with_items :
    - { param: APACHE_RUN_USER, value: "www-data" }
    - { param: APACHE_RUN_GROUP, value: "www-data" }

- name: Set nicer permissions on Apache log directory
  file:
    path: /var/log/apache2
    state: directory
    mode: 0755
    recurse: true

# Apache mod support
- name: Enable Apache mods
  file:
    src: "/etc/apache2/mods-available/{{ item }}"
    dest: "/etc/apache2/mods-enabled/{{ item }}"
    state: link
  with_items: "{{ apache_mods_enabled }}"
  notify: restart apache

- name: Disable Apache mods
  file:
    path: "/etc/apache2/mods-enabled/{{ item }}"
    state: absent
  with_items: "{{ apache_mods_disabled }}"
  notify: restart apache

# Apache vhosts
- name: Add apache vhosts configuration
  template:
    src: vhosts.conf.j2
    dest: "/etc/apache2/sites-available/{{ apache_vhosts_filename }}"
    owner: root
    group: root
    mode: 0644
  notify: restart apache
  when: apache_create_vhosts

- name: Add vhost symlink in sites-enabled
  file:
    src: "/etc/apache2/sites-available/{{ apache_vhosts_filename }}"
    dest: "/etc/apache2/sites-enabled/{{ apache_vhosts_filename }}"
    state: link
  notify: restart apache
  when: apache_create_vhosts

- name: Remove default vhost in sites-enabled
  file:
    path: /etc/apache2/sites-enabled/000-default.conf
    state: absent
  notify: restart apache

# Enable Apache
- name: Ensure Apache has selected state and enabled on boot
  service:
    name: "{{ apache_service }}"
    state: "{{ apache_state }}"
    enabled: yes

###


- name: Enable Apache2 modules
  apache2_module: state=present name={{ item }}
  with_items: "{{ apache2.modules }}"

- name: Remove default Apache2 vhosts
  file: path=/etc/apache2/sites-enabled/000-default.conf state=absent

- name: Remove default Apache2 ssl vhosts
  file: path=/etc/apache2/sites-enabled/default-ssl.conf state=absent

- name: Configure Apache2 user and group
  lineinfile: dest=/etc/apache2/envvars regexp="^export {{ item.param }}=" line="export {{ item.param }}={{ item.value }}"
  with_items :
    - { param: APACHE_RUN_USER, value: "{{ apache2.run_as }}" }
    - { param: APACHE_RUN_GROUP, value: "{{ apache2.run_as }}" }

- name: "Ensure Apache2 is {{ apache2.start | ternary('started','stopped') }}"
  service: name=apache2 state={{ apache2.start | ternary('restarted','stopped') }} enabled={{ apache2.service_enabled }}

###

- name: "Enable Apache2 PHP {{ (apache2_php.version == '7.0') | ternary('7.0','5.6') }} modules"
  apache2_module: state=present name="php{{ (apache2_php.version == '7.0') | ternary('7.0','5.6') }}"

- name: "Disable Apache2 PHP {{ (apache2_php.version != '7.0') | ternary('7.0','5.6') }} modules"
  apache2_module: state=absent name="php{{ (apache2_php.version != '7.0') | ternary('7.0','5.6') }}"

- name: Add Apache 2 vhosts
  template: src={{ item.template }}.j2 dest="/etc/apache2/sites-available/vhost-{{ item.vhost }}.conf"
  with_items: "{{ vhosts }}"
  register: apache2_php_confs

- name: Clean Apache 2 vhosts
  shell: "rm -f /etc/apache2/sites-enabled/vhost-*.conf"
  args:
    warn: false

- name: Enable Apache 2 vhosts
  shell: "a2ensite vhost-{{ item.vhost }}.conf"
  with_items: "{{ vhosts }}"
  notify: Restart apache2

- name: Clean /etc/hosts file
  replace: dest=/etc/hosts regexp=".* \# apache2 vhost\n" replace=""

- name: Build /etc/hosts file
  lineinfile: dest=/etc/hosts regexp=".*{{ item.vhost }} \# apache2 vhost$" line="127.0.0.1   {{ item.vhost }} {{ '#' }} apache2 vhost" state=present
  with_items: "{{ vhosts }}"

- name: List Apache 2 vhosts
  set_fact:
    apache2_confs: "{{ apache2_php_confs.results|selectattr('dest', 'string')|map(attribute='dest')|list + apache2_php_confs.results|selectattr('path', 'string')|map(attribute='path')|select|list }}"
  when: apache2_php_confs

- name: List Apache 2 configs
  shell: ls -1 /etc/apache2/sites-available/vhost-*.conf
  register: ls_contents
  when: apache2_php_confs
  failed_when: false
  changed_when: false

- name: Remove old confs
  file: path="{{ item }}" state=absent
  with_items: ls_contents.stdout_lines
  when: apache2_php_confs and item not in apache2_confs
  notify: Restart apache2

- name: "Ensure Apache2 is {{ apache2.start | ternary('started','stopped') }}"
  service: name=apache2 state={{ apache2.start | ternary('restarted','stopped') }} enabled={{ apache2.service_enabled }}
